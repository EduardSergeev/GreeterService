name: build

on:
  push:
    branches-ignore:
      - 'docs'
  pull_request:
    branches:
      - master
      
env:
  BENCH_LINUX: ubuntu-latest
  BENCH_WINDOWS: windows-latest
  BENCH_ARGS: ${{ (github.ref == 'refs/heads/master' || github.event_name == 'pull_request') && '-a ../.bench -f "*"' || '-a ../.bench -j short -f "SingleDto.*"' }}
  BENCH_ARTIFACTS: |
    .bench/**/*.csv
    .bench/**/*.html
    .bench/**/*.md
    .bench/**/*plot.png

jobs:
  service:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set version
      uses: EduardSergeev/project-version-action@v6.5
      with:
        time-zone: Australia/Sydney
        version-file: properties/Global.props
    - name: dotnet publish '${{ env.VERSION }}'
      run: dotnet publish -c Release Greeter.Service

  client:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set version
      uses: EduardSergeev/project-version-action@v6.5
      with:
        time-zone: Australia/Sydney
        version-file: properties/Global.props
    - name: dotnet publish '${{ env.VERSION }}'
      run: dotnet publish -c Release Greeter.Client

  dotnet-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set version
      uses: EduardSergeev/project-version-action@v6.5
      with:
        time-zone: Australia/Sydney
        version-file: properties/Global.props
    - name: dotnet test '${{ env.VERSION }}'
      run: dotnet test -c Release Greeter.Test

  docker-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set version
      uses: EduardSergeev/project-version-action@v6.5
      with:
        time-zone: Australia/Sydney
        version-file: properties/Global.props
    - name: docker build '${{ env.VERSION }}'
      run: docker build -t greeter-service -f Greeter.Service/Dockerfile .
    - name: docker run
      run: docker run --rm -d --name greeter-service -p 5001:443 greeter-service
    - name: dotnet run 
      run: |
        cd Greeter.Client
        dotnet run -c Release
    - name: docker logs
      run: docker logs greeter-service
    - name: docker stop
      run: docker stop greeter-service

  benchmarks:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Set version
      uses: EduardSergeev/project-version-action@v6.5
      with:
        time-zone: Australia/Sydney
        version-file: properties/Global.props
    - name: Benchmarks warm up
      run: |
        cd Greeter.Bench
        dotnet run -c Release -- -a ../.bench -j dry -f "SingleDto.DtoToBinary"
    - name: Conversion benchmarks '${{ env.VERSION }}'
      run: |
        cd Greeter.Bench
        dotnet run -c Release -- ${{ env.BENCH_ARGS }}
    - name: Upload ${{ matrix.os }} benchmark results
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.os }}
        path: ${{ env.BENCH_ARTIFACTS }}
 
  documentation:
    needs:
      - benchmarks
    runs-on: ubuntu-latest
    env:
      DOCS_BRANCH: docs
      DOCS_DIR: ${{ github.workspace }}/docs
    steps:    
    - name: Check out ${{ env.DOCS_BRANCH }} branch
      uses: actions/checkout@v3
      with:
        ref: ${{ env.DOCS_BRANCH }}
    - name: Set version
      uses: EduardSergeev/project-version-action@v6.5
      with:
        time-zone: Australia/Sydney
        version-file-exists: false
    - name: Clear up ${{ env.DOCS_DIR }} directory
      run: |
        rm -fr ${{ env.DOCS_DIR }}
        mkdir ${{ env.DOCS_DIR }}
    - name: Download ${{ env.BENCH_LINUX }} benchmark results
      uses: actions/download-artifact@v3
      with:
        name: ${{ env.BENCH_LINUX }}
        path: ${{ env.DOCS_DIR }}/${{ env.BENCH_LINUX }}
    - name: Download ${{ env.BENCH_WINDOWS }} benchmark results
      uses: actions/download-artifact@v3
      with:
        name: ${{ env.BENCH_WINDOWS }}
        path: ${{ env.DOCS_DIR }}/${{ env.BENCH_WINDOWS }}
    - name: Update documentation
      run: |
        npm i -g badge-maker
        badge version "${{ env.VERSION }}" :green > "${{ env.DOCS_DIR }}/version.svg"
        badge bench-linux "${{ env.VERSION }}" "#E95420" > "${{ env.DOCS_DIR }}/bench-linux.svg"
        badge bench-windows "${{ env.VERSION }}" "#01BCF3" > "${{ env.DOCS_DIR }}/bench-windows.svg"
        git add ${{ env.DOCS_DIR }}/*
        git -c "user.name=Auto Publisher" -c "user.email=eduard.sergeev@gmail.com" commit --allow-empty -m "Build ${{ env.VERSION }}"

    - name: Push documentation to '${{ env.DOCS_BRANCH }}' branch
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ env.DOCS_BRANCH }}
